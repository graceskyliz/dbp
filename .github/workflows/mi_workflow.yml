name: Java Spring Boot CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'  # Cambio aplicado

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Run Tests
        run: mvn test

      - name: Lint Java code
        run: mvn checkstyle:checkstyle

      - name: Build Docker image
        run: |
          docker-compose -f docker/docker-compose.yml build

      - name: Run Spring Boot application in Docker
        run: |
          docker-compose -f docker/docker-compose.yml up -d

      - name: Health check for PostgreSQL
        run: |
          docker exec -it $(docker ps -q --filter "name=postgres") pg_isready -U postgres

      - name: Shutdown Docker containers
        if: always()
        run: |
          docker-compose -f docker/docker-compose.yml down

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'  # Cambio aplicado

      - name: Run Checkstyle Lint
        run: mvn checkstyle:checkstyle
